from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from database.thedex_db import get_transaction


async def main_menu(lang, tg_id) -> InlineKeyboardMarkup:
    trans = await get_transaction(tg_id)
    if not trans:
        balance, refill, withdrawal, structure, support, information = ["–ë–∞–ª–∞–Ω—Å", "‚¨ÜÔ∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", "–í—ã–≤–æ–¥",
                                                                        "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                                                                        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
        if lang == "EN":
            balance, refill, withdrawal, structure, support, information = ["Balance", "‚¨ÜÔ∏è Refill", "Withdrawal",
                                                                            "Affiliate program", "Support",
                                                                            "Information"]
    else:
        balance, refill, withdrawal, structure, support, information = ["–ë–∞–ª–∞–Ω—Å", "‚ÄºÔ∏è –ù–ï–ó–ê–ö–û–ù–ß–ï–ù–ù–ê–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø",
                                                                        "–í—ã–≤–æ–¥",
                                                                        "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                                                                        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
        if lang == "EN":
            balance, refill, withdrawal, structure, support, information = ["Balance", "‚ÄºÔ∏è UNCOMPLETED TRANSACTION",
                                                                            "Withdrawal", "Partner Program", "Support",
                                                                            "Information"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f'üíµ {balance}', callback_data='balance')],
        [InlineKeyboardButton(f'ü™™ {structure}', callback_data='structure')],
        [InlineKeyboardButton(f' {refill}', callback_data='refill')],
        [InlineKeyboardButton(f'‚¨áÔ∏è {withdrawal}', callback_data='withdrawal')],
        [InlineKeyboardButton(f'üßë‚Äçüíª {support}', callback_data='support'),
         InlineKeyboardButton(f'üìí {information}', callback_data='information')],
        [InlineKeyboardButton(f'ü§ñ J2MGPT BETA', url='https://t.me/j2m_gptbot')]
    ])
    return kb


def main_menu_short(lang) -> InlineKeyboardMarkup:
    balance, support, information = ["–ö–æ—à–µ–ª–µ–∫", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"]
    if lang == "EN":
        balance, support, information = ["Wallet", "Support", "Information"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f'üíµ {balance}', callback_data='balance')],
        [InlineKeyboardButton(f'üßë‚Äçüíª {support}', callback_data='support_short'),
         InlineKeyboardButton(f'üìí {information}', callback_data='information')]
    ])
    return kb


def back_button(lang) -> InlineKeyboardMarkup:
    button = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    if lang == "EN":
        button = "Main menu"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f'‚óÄÔ∏è {button}', callback_data='main_menu')]
    ])
    return kb


def back_menu(lang) -> InlineKeyboardMarkup:
    button = '–ù–∞–∑–∞–¥'
    if lang == "EN":
        button = "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f'‚óÄÔ∏è {button}', callback_data='back')]
    ])
    return kb


def language() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data='ru'),
         InlineKeyboardButton('üá∫üá∏ English', callback_data='en')]
    ])
    return kb


def balance_history(lang) -> InlineKeyboardMarkup:
    refill_history, withdrawal_history, back = ["–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", "–ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–æ–≤", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    if lang == "EN":
        refill_history, withdrawal_history, back = ["Refill history", "Withdrawal history", "Main menu"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f'‚¨ÜÔ∏è {refill_history}', callback_data='refill_history'),
         InlineKeyboardButton(f'‚¨áÔ∏è {withdrawal_history}', callback_data='withdrawal_history')],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='main_menu')]
    ])
    return kb


def user_terms(lang) -> InlineKeyboardMarkup:
    text = "–ü—Ä–∏–Ω–∏–º–∞—é"
    if lang == "EN":
        text = "Accept"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{text}", callback_data='terms_accept')]
    ])
    return kb


def user_terms_2(lang) -> InlineKeyboardMarkup:
    text, text2 = ["–ü—Ä–∏–Ω–∏–º–∞—é", "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"]
    if lang == "EN":
        text, text2 = ["Accept", "Confirm"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚úÖ {text}", callback_data='terms_accept')],
        [InlineKeyboardButton(f"{text2}", callback_data="terms_done")]
    ])
    return kb


def user_docs(lang) -> InlineKeyboardMarkup:
    text = "–ü—Ä–∏–Ω–∏–º–∞—é"
    if lang == "EN":
        text = "Accept"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{text}", callback_data='docs_accept')]
    ])
    return kb


def user_docs_2(lang) -> InlineKeyboardMarkup:
    text, text2 = ["–ü—Ä–∏–Ω–∏–º–∞—é", "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"]
    if lang == "EN":
        text, text2 = ["Accept", "Confirm"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚úÖ {text}", callback_data='docs_accept')],
        [InlineKeyboardButton(f"{text2}", callback_data="docs_done")]
    ])
    return kb


def referral_statistic(lang) -> InlineKeyboardMarkup:
    text, data, back = '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    if lang == "EN":
        text, data, back = "Detailed statistic", "Personal data", "Main menu"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üìä {text}", callback_data='full_statistic')],
        [InlineKeyboardButton(f"üßò {data}", callback_data="user_data")],
        [InlineKeyboardButton(f"‚óÄÔ∏è {back}", callback_data="main_menu")]
    ])
    return kb


def referral_lines(lang) -> InlineKeyboardMarkup:
    text1, text2, text3, back = "1 –ª–∏–Ω–∏—è", "2 –ª–∏–Ω–∏—è", "3 –ª–∏–Ω–∏—è", "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    if lang == "EN":
        text1, text2, text3, back = "Line 1", "Line 2", "Line3", "Go Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üßç‚Äç‚ôÇÔ∏è {text1}", callback_data='line1'),
         InlineKeyboardButton(f"üë¨ {text2}", callback_data='line2'),
         InlineKeyboardButton(f"üë®‚Äçüë®‚Äçüë¶ {text3}", callback_data='line3')],
        [InlineKeyboardButton(f"üîô {back}", callback_data="structure")]
    ])
    return kb


def detailed_statistic(lang) -> InlineKeyboardMarkup:
    back = "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    if lang == "EN":
        back = "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üîô {back}", callback_data="full_statistic")]
    ])
    return kb


def information_back(lang) -> InlineKeyboardMarkup:
    back = "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    if lang == "EN":
        back = "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üîô {back}", callback_data="information")]
    ])
    return kb


def yesno(lang) -> InlineKeyboardMarkup:
    yes_button, no_button = "–î–∞", "–ù–µ—Ç"
    if lang == "EN":
        yes_button, no_button = "Yes", "No"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üëç {yes_button}", callback_data="yes"),
         InlineKeyboardButton(f"üëé {no_button}", callback_data="no")]
    ])
    return kb


def yesno_refill(lang) -> InlineKeyboardMarkup:
    yes_button, no_button, skip_button = "–î–∞", "–ù–µ—Ç", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    if lang == "EN":
        yes_button, no_button, skip_button = "Yes", "No", "Skip"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üëç {yes_button}", callback_data="yes"),
         InlineKeyboardButton(f"üëé {no_button}", callback_data="no")],
        [InlineKeyboardButton(f"‚è≠Ô∏è {skip_button}", callback_data="yes")]
    ])
    return kb


def refill_account(lang) -> InlineKeyboardMarkup:
    first_button, second_button, stabpool = "–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 15 000 USD", "–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 50 USD", \
        "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª"
    if lang == "EN":
        first_button, second_button = "Personal account starting from 15 000 USDT", \
            "Collective account starting from 500 USDT."
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∞ {first_button}", callback_data="active_15000")],
        [InlineKeyboardButton(f"üíµ {second_button}", callback_data="active_500")],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data="stabpool")]
    ])
    return kb


def refill_account_2(lang) -> InlineKeyboardMarkup:
    first_button, second_button, stabpool, back = "–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 15 000 USD", "–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 50 USDT", \
        "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        first_button, second_button, stabpool, back = "Personal account starting from 15,000 USD", \
            "Collective account starting from 50 USD.", "Stab Pool", "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∞ {first_button}", callback_data="15000")],
        [InlineKeyboardButton(f"üíµ {second_button}", callback_data="500")],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data="stabpool")],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='refill')]
    ])
    return kb


def continue_refill(lang) -> InlineKeyboardMarkup:
    button = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
    if lang == "EN":
        button = "Continue"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚è© {button}", callback_data="refill")]
    ])
    return kb


def refill_500_choice(lang) -> InlineKeyboardMarkup:
    button, button_2, button_3, back = "–æ—Ç 500 –¥–æ 1000 USDT", "–æ—Ç 1000 USDT", "–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 25 000 USDT", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        button, button_2, button_3, back = "from 500 to 1000 USDT", "from 1000 USDT", \
            "Personal account from 15 000 USDT", "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üíµ {button}", callback_data="from_500")],
        [InlineKeyboardButton(f"üí∞ {button_2}", callback_data="from_1000")],
        [InlineKeyboardButton(f"üí∞üí∞ {button_3}", callback_data="15000")],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='deposit_funds')]
    ])
    return kb


def return_currencies() -> InlineKeyboardMarkup:
    crypto_dict = {
        # 'Bitcoin': 'BTC_BITCOIN',
        # 'Ethereum': 'ETH_ETHEREUM',
        'USDT TRC-20': 'USDT_TRON',
        'USDT ERC-20': 'USDT_ETHEREUM',
        # 'Tron': 'TRX_TRON',
        # 'Litecoin': 'LTC_LITECOIN',
        # 'Binance Coin': 'BNB_BSC',
        # 'Binance USD': 'BUSD_BSC'
    }
    kb = InlineKeyboardMarkup()
    for key, value in crypto_dict.items():
        button = InlineKeyboardButton(key, callback_data=value)
        kb.add(button)
    return kb


def finish_transaction(lang) -> InlineKeyboardMarkup:
    button, button2 = "–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", "–û—Ç–º–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
    if lang == "EN":
        button, button2 = "Payment completed", "Cancel"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚úÖ {button}", callback_data="finish_payment")],
        [InlineKeyboardButton(f"‚ùå {button2}", callback_data="cancel_payment")]
    ])
    return kb


def transaction_status(lang) -> InlineKeyboardMarkup:
    button = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—â–µ —Ä–∞–∑"
    button_2 = "–î–µ—Ç–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
    button3 = "–û—Ç–º–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
    if lang == "EN":
        button = "Please double-check again"
        button_2 = "Transaction Detail"
        button3 = "Cancel"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üîÑ {button}", callback_data="transaction_status"),
         InlineKeyboardButton(f"üß© {button_2}", callback_data="transaction_detail")],
        [InlineKeyboardButton(f"‚ùå {button3}", callback_data="cancel_payment")]
    ])
    return kb


def withdrawal_confirmation(lang) -> InlineKeyboardMarkup:
    button, button_2 = "–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞", "–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"
    if lang == "EN":
        button, button_2 = "Withdraw funds", "Cancel operation"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚úÖ {button}", callback_data="withdrawal_confirmation")],
        [InlineKeyboardButton(f"‚ùå {button_2}", callback_data="main_menu")]
    ])
    return kb


def finish_withdrawal(lang) -> InlineKeyboardMarkup:
    button, button_2 = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "–û—Ç–º–µ–Ω–∏—Ç—å"
    if lang == "EN":
        button, button_2 = "Confirm", "Cancel"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚úÖ {button}", callback_data="confirm_withdrawal"),
         InlineKeyboardButton(f"‚ùå {button_2}", callback_data="cancel_withdrawal")]
    ])
    return kb


def hold_kb(lang) -> InlineKeyboardMarkup:
    button, button_2, button_3 = "30 –¥–Ω–µ–π", "90 –¥–Ω–µ–π", "180 –¥–Ω–µ–π"
    if lang == "EN":
        button, button_2, button_3 = "30 days", "60 days", "90 days"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{button}", callback_data="30"),
         InlineKeyboardButton(f"{button_2}", callback_data="90"),
         InlineKeyboardButton(f"{button_3}", callback_data="180")]
    ])
    return kb


def main_withdraw(lang) -> InlineKeyboardMarkup:
    button, button_2, button_3, button_4 = "–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤", "–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞", \
        "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç —Ä–µ–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    if lang == "EN":
        button, button_2, button_3, button_4 = "Withdraw funds", "Change wallet", \
            "Change reinvestment percentage", "Back to main menu"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üîΩ {button}", callback_data="withdrawal_funds")],
        [InlineKeyboardButton(f"üîÄ {button_2}", callback_data="change_wallet")],
        [InlineKeyboardButton(f"üßÆ {button_3}", callback_data="change_percentage")],
        [InlineKeyboardButton(f"‚óÄÔ∏è {button_4}", callback_data="main_menu")]
    ])
    return kb


def withdraw_percentage(lang) -> InlineKeyboardMarkup:
    button, button_2, button_3 = "–ù–∏—á–µ–≥–æ", "50%", "100%"
    if lang == "EN":
        button, button_2, button_3 = "None", "50%", "100%"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{button}", callback_data="0"),
         InlineKeyboardButton(f"{button_2}", callback_data="50"),
         InlineKeyboardButton(f"{button_3}", callback_data="100")]
    ])
    return kb


def get_nft(lang) -> InlineKeyboardMarkup:
    button, support = "–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ NFT", "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
    if lang == "EN":
        button, support = "Get NFT", "Connect with support"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{button}", callback_data="get_nft")],
        [InlineKeyboardButton(f'üßë‚Äçüíª {support}', callback_data="support_nft")]])
    return kb


def check_nft_status(lang) -> InlineKeyboardMarkup:
    button, button_2 = "–û–±–Ω–æ–≤–∏—Ç—å", "–î–µ—Ç–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
    if lang == "EN":
        button, button_2 = "Refresh", "Transaction Details"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{button}", callback_data="refresh_nft"),
         InlineKeyboardButton(f"{button_2}", callback_data="transaction_details_nft")]])
    return kb


def refill_main_menu(lang) -> InlineKeyboardMarkup:
    button, button_2, button_3 = "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è", "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    if lang == "EN":
        button, button_2, button_3 = "To review the terms", "To deposit funds", "Return to main menu"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"‚ÄçüéìÔ∏è {button}", callback_data="review_terms"),
         InlineKeyboardButton(f"üíµ {button_2}", callback_data="deposit_funds")],
        [InlineKeyboardButton(f"‚óÄÔ∏è {button_3}", callback_data="main_menu")]
    ])
    return kb


def distribution(lang) -> InlineKeyboardMarkup:
    button, back = "–£—Å–ª–æ–≤–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ü–û", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        button, back = "Terms of software usage", "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üë™ {button}", callback_data="distribution")],
        [InlineKeyboardButton(f"‚óÄÔ∏è {back}", callback_data="refill")]])
    return kb


def active_50(lang) -> InlineKeyboardMarkup:
    partner, button_1, button_2, stabpool, back = "–£—Å–ª–æ–≤–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã", "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 5000 USDT", \
        "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 15000 USDT", "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        partner, button_1, button_2, stabpool, back = "Partner Program Terms", "Explore terms from 5000 USDT", \
            "Explore terms from 15000 USDT", "Stabilization Pool", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üë™ {partner}", callback_data="partners")],
        [InlineKeyboardButton(f"üíµ {button_1}", callback_data="active_5000")],
        [InlineKeyboardButton(f"üíµ {button_2}", callback_data="active_15000")],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data='stabpool_terms')],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='distribution')]
    ])
    return kb


def active_5000(lang) -> InlineKeyboardMarkup:
    partner, button_1, button_2, stabpool, back = "–£—Å–ª–æ–≤–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã", "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 50 USDT", \
        "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 15000 USDT", "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        partner, button_1, button_2, stabpool, back = "Partner Program Terms", "Explore terms from 50 USDT", \
            "Explore terms from 15000 USDT", "Stabilization Pool", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üë™ {partner}", callback_data="partners")],
        [InlineKeyboardButton(f"üíµ {button_1}", callback_data="active_50")],
        [InlineKeyboardButton(f"üíµ {button_2}", callback_data="active_15000")],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data='stabpool_terms')],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='distribution')]
    ])
    return kb


def active_15000(lang) -> InlineKeyboardMarkup:
    partner, button_1, button_2, stabpool, back = "–£—Å–ª–æ–≤–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã", "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 50 USDT", \
        "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 5000 USDT", "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        partner, button_1, button_2, stabpool, back = "Partner Program Terms", "Explore terms from 5000 USDT", \
            "Explore terms from 15000 USDT", "Stabilization Pool", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üë™ {partner}", callback_data="partners")],
        [InlineKeyboardButton(f"üíµ {button_1}", callback_data="active_50")],
        [InlineKeyboardButton(f"üíµ {button_2}", callback_data="active_5000")],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data='stabpool_terms')],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='distribution')]
    ])
    return kb


def stabpool_kb(lang) -> InlineKeyboardMarkup:
    button, button_1, button_2, button_3, back = "–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–º –ø—É–ª–µ", "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 50 USDT", \
        "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 5000 USDT", "–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ç 15000 USDT", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        button, button_1, button_2, button_3, back = "Participate in stabilization pool", \
            "Explore terms from 50 USDT", "Explore terms from 5000 USDT", "Explore terms from 15000 USDT", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∞ {button}", callback_data="stabpool")],
        [InlineKeyboardButton(f"üíµ {button_1}", callback_data="active_50")],
        [InlineKeyboardButton(f"üíµ {button_2}", callback_data="active_5000")],
        [InlineKeyboardButton(f"üíµ {button_3}", callback_data="active_15000")],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='distribution')]
    ])
    return kb


def partners_kb(lang) -> InlineKeyboardMarkup:
    button_1, button_2 = "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–ø–∏—Å–∞–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π", "–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤—ã"
    if lang == "EN":
        button_1, button_2 = "Return to Category Descriptions", "Place Assets"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üë™ {button_1}", callback_data="distribution")],
        [InlineKeyboardButton(f"üìñ {button_2}", callback_data="deposit_funds")],
    ])
    return kb


def emailing_documents(lang) -> InlineKeyboardMarkup:
    button = "–î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
    if lang == "EN":
        button = "The documents have been sent"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üì® {button}", callback_data="emailing_documents")]])
    return kb


def support_menu(status) -> InlineKeyboardMarkup:
    button_1, button_2, button3 = "Support SONERA", "Support J2M", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{button_1}", url="https://t.me/sonera_help")],
        [InlineKeyboardButton(f"{button_2}", url="https://t.me/J2M_Support")],
        [InlineKeyboardButton(f"{button3}", callback_data=status)]
    ])
    return kb


def change_data(lang) -> InlineKeyboardMarkup:
    button_1, button_2, back = "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Ü.—Å–µ—Ç–∏", "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
    if lang == 'EN':
        button_1, button_2, back = "Change name", "Change socials", "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üö∂ {button_1}", callback_data="change_name")],
        [InlineKeyboardButton(f"üåê {button_2}", callback_data='change_socials')],
        [InlineKeyboardButton(f"‚óÄÔ∏è {back}", callback_data='structure')]
    ])
    return kb


def refill_account_3(lang) -> InlineKeyboardMarkup:
    first_button, second_button, third_button, stabpool, back = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1 (–æ—Ç 50 USDT –¥–æ 4999 USDT)", \
        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2 (–æ—Ç 5000 USDT –¥–æ 14 999 USDT)", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è 3 (–æ—Ç 15000 USDT)", "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–ª", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        first_button, second_button, third_button, stabpool, back = "Category 1 (from 50 USDT to 4999 USDT)", \
            "Category 2 (from 5000 USDT to 14,999 USDT)", "Category 3 (from 15000 USDT)", "Stabilization Pool", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∞ {first_button}", callback_data="active_50")],
        [InlineKeyboardButton(f"üíµ {second_button}", callback_data="active_5000")],
        [InlineKeyboardButton(f"üíµ {third_button}", callback_data='active_15000')],
        [InlineKeyboardButton(f"üíµ {stabpool}", callback_data='stabpool_terms')],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='review_terms')]
    ])
    return kb


def emailing_alias(lang) -> InlineKeyboardMarkup:
    button = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
    if lang == "EN":
        button = "The information have been sent"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üì® {button}", callback_data="emailing_alias")]])
    return kb


def email_verif(lang) -> InlineKeyboardMarkup:
    button_1, button_2 = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π –∫–æ–¥", "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—á—Ç—É"
    if lang == "EN":
        button_1, button_2 = "Send another code", "Change email"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üì® {button_1}", callback_data="new_code")],
        [InlineKeyboardButton(f"üìß {button_2}", callback_data="change_email")]
    ])
    return kb


def tax_fee() -> InlineKeyboardMarkup:
    button = "–û–ø–ª–∞—Ç–∏—Ç—å"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∏ {button}", callback_data="tax_fee")]])
    return kb


def withdrawal_account(lang) -> InlineKeyboardMarkup:
    first_button, second_button, third_button, back = "–í—ã–≤–æ–¥ —Å –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–æ—Ç 15 000 USDT)", \
        "–í—ã–≤–æ–¥ —Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–æ—Ç 500 USDT)", "–í—ã–≤–æ–¥ —Å–æ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø—É–ª–∞", "–ù–∞–∑–∞–¥"
    if lang == "EN":
        first_button, second_button, third_button, back = "Withdrawal from personal account (starting from 15,000 USDT)", \
            "Withdrawal from collective account (starting from 500 USDT)", "Withdraw from stabilization pool", "Go back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"üí∞ {first_button}", callback_data="withdrawal_15000")],
        [InlineKeyboardButton(f"üíµ {second_button}", callback_data="withdrawal_500")],
        [InlineKeyboardButton(f"üí≤ {third_button}", callback_data="withdrawal_stabpool")],
        [InlineKeyboardButton(f'‚óÄÔ∏è {back}', callback_data='withdrawal')]
    ])
    return kb


def information_menu(lang) -> InlineKeyboardMarkup:
    dao, documents, products, collaboration, news, marketing, back = [
        "–û DAO J2M", "–î–æ–∫—É–º–µ–Ω—Ç—ã", "–ü—Ä–æ–¥—É–∫—Ç—ã",
        "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "–ù–æ–≤–æ—Å—Ç–∏", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    if lang == "EN":
        dao, documents, products, collaboration, news, marketing, back = [
            "About DAO J2M", "Documents", "Products",
            "Collaboration", "News", "Marketing", "Main Menu"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{dao}", callback_data="dao"),
         InlineKeyboardButton(f"{documents}", callback_data="info_documents")],
        [InlineKeyboardButton(f"{products}", callback_data="info_products"),
         InlineKeyboardButton(f"{collaboration}", callback_data="info_collaboration")],
        [InlineKeyboardButton(f"{news}", callback_data="info_news"),
         InlineKeyboardButton(f"{marketing}", callback_data="info_marketing")],
        [InlineKeyboardButton(f"{back}", callback_data="main_menu")]
    ])
    return kb


def about_j2m_kb(lang) -> InlineKeyboardMarkup:
    documents, products, collaboration, news, marketing, back = [
        "–î–æ–∫—É–º–µ–Ω—Ç—ã", "–ü—Ä–æ–¥—É–∫—Ç—ã",
        "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "–ù–æ–≤–æ—Å—Ç–∏", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ (PDF)", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    if lang == "EN":
        documents, products, collaboration, news, marketing, back = [
            "Legal Documents", "Products",
            "Collaboration", "News", "Marketing", "Main Menu"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{documents}", callback_data="info_documents"),
         InlineKeyboardButton(f"{products}", callback_data="info_products")],
        [InlineKeyboardButton(f"{collaboration}", callback_data="info_collaboration"),
         InlineKeyboardButton(f"{news}", callback_data="info_news")],
        [InlineKeyboardButton(f"{marketing}", callback_data="info_marketing"),
         InlineKeyboardButton(f"{back}", callback_data="main_menu")]
    ])
    return kb


def info_documents_kb(lang) -> InlineKeyboardMarkup:
    dao, products, collaboration, news, marketing, back = [
        "–û DAO J2M", "–ü—Ä–æ–¥—É–∫—Ç—ã", "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "–ù–æ–≤–æ—Å—Ç–∏", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    if lang == "EN":
        dao, products, collaboration, news, marketing, back = [
            "About DAO J2M", "Products", "Collaboration", "News", "Marketing", "Main Menu"]
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{dao}", callback_data="dao"),
         InlineKeyboardButton(f"{products}", callback_data="info_products")],
        [InlineKeyboardButton(f"{collaboration}", callback_data="info_collaboration"),
         InlineKeyboardButton(f"{news}", callback_data="info_news")],
        [InlineKeyboardButton(f"{marketing}", callback_data="info_marketing"),
         InlineKeyboardButton(f"{back}", callback_data="main_menu")]
    ])
    return kb


def info_products_kb(lang) -> InlineKeyboardMarkup:
    dao_bot, nft, back = "–û –±–æ—Ç–µ DAO J2–ú", "NFT ‚Äî 10 USDT", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"
    if lang == "EN":
        dao_bot, nft, back = 'About J2M Bot', 'NFT - 10 USDT', 'Return to Information'
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{dao_bot}", callback_data="info_dao_bot"),
         InlineKeyboardButton(f"{nft}", callback_data="info_nft")],
        [InlineKeyboardButton(f"{back}", callback_data="information")]
    ])
    return kb


def info_news_kb(lang) -> InlineKeyboardMarkup:
    group, main, back = "J2M Channel", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"
    if lang == "EN":
        group, main, back = "J2M Channel", 'Main Menu','Return to Information'
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{group}", url='https://t.me/J2M_Channel')],
        [InlineKeyboardButton(f"‚óÄÔ∏è {back}", callback_data="information")],
        [InlineKeyboardButton(f"{main}", callback_data="main_menu")]
    ])
    return kb


def info_bot_nft_kb(lang) -> InlineKeyboardMarkup:
    main, back, product = "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π", \
        "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
    if lang == "EN":
        main, back, product = 'Return to main menu', 'Return to Information', 'Return to Products'
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{back}", callback_data="information")],
        [InlineKeyboardButton(f"{main}", callback_data="main_menu")],
        [InlineKeyboardButton(f"{product}", callback_data="info_products")]
    ])
    return kb


def info_collaboration_kb(lang) -> InlineKeyboardMarkup:
    main, back, partners = "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π", \
        "–ü–∞—Ä—Ç–Ω–µ—Ä—ã DAO"
    if lang == "EN":
        main, back, partners = 'Return to main menu', 'Return to Information', 'DAO Partners'
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{back}", callback_data="information")],
        [InlineKeyboardButton(f"{main}", callback_data="main_menu")],
        [InlineKeyboardButton(f"{partners}", callback_data="dao_partners")]
    ])
    return kb


def info_marketing_kb(lang) -> InlineKeyboardMarkup:
    gloss, product_pres, partners_pres, instructions, online_resources, webinars, visuals, back = "–ì–ª–æ—Å—Å–∞—Ä–∏–π", \
        "–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å DAO J2M", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç", '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', '–û —Å–æ–æ–±—â–µ—Å—Ç–≤–µ', \
        '–°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–æ–ª–∏–∫–∏ –∏ –∑–∞–ø–∏—Å–∏ –≤–µ–±–∏–Ω–∞—Ä–æ–≤', '–í–∏–∑—É–∞–ª—ã –∏ –∫—Ä–µ–∞—Ç–∏–≤—ã', '–ù–∞–∑–∞–¥'
    if lang == "EN":
        gloss, product_pres, partners_pres, instructions, online_resources, webinars, visuals, back = "Glossary", \
            "Product Presentation", "Affiliate Program Presentation", "Instructions", \
            "Links to Online Resources of DAO j2M", "Links to Videos and Webinar Recordings", \
            "Visuals and Creatives", "Back"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{gloss}", callback_data="gloss")],
        [InlineKeyboardButton(f"{product_pres}", callback_data="product_pres")],
        [InlineKeyboardButton(f"{partners_pres}", callback_data="partners_pres")],
        [InlineKeyboardButton(f"{instructions}", callback_data="instructions")],
        [InlineKeyboardButton(f"{online_resources}", callback_data="online_resources")],
        [InlineKeyboardButton(f"{webinars}", callback_data="webinars")],
        [InlineKeyboardButton(f"{visuals}", callback_data="visuals")],
        [InlineKeyboardButton(f"{back}", callback_data="information")]
    ])
    return kb


def media_program() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç", callback_data="media_transfer")]
    ])
    return kb